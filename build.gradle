buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
//  compile "com.heroku.sdk:heroku-jdbc:0.1.1"
//  compile "org.postgresql:postgresql:9.4-1201-jdbc4"
//  compile("org.springframework.boot:spring-boot-starter-jetty")
//  compile("org.springframework.boot:spring-boot-starter-actuator")
//  compile("org.springframework.boot:spring-boot-starter-web")
//  testCompile("org.springframework.boot:spring-boot-starter-test")
//  testCompile("junit:junit")
//  testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
//  testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-actuator")
  testCompile("org.springframework.boot:spring-boot-starter-test")
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}
